const http = require('http');
var MongoClient = require('mongodb').MongoClient;
var url = "mongodb://192.168.56.104:27017/";
var datodb = "";

MongoClient.connect(url, function(err, db){
if(err){

}else{
var dbo = db.db("biblioteca");
dbo.collection("libros").findOne({}, function(err, result) {
if (err) throw err;
console.log(result.name);
datodb = result.name;
db.close();
}


var os = require('os');
var ifaces = os.networkInterfaces();
var app = "";

Object.keys(ifaces).forEach(function (ifname) {
  var alias = 0;

  ifaces[ifname].forEach(function (iface) {
    if ('IPv4' !== iface.family || iface.internal !== false) {
      // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses
      return;
    }

    if (alias >= 1) {
      // this single interface has multiple ipv4 addresses
      console.log(ifname + ':' + alias, iface.address);
    } else {
	
	if (ifname == 'eth1') app=iface.address;
      // this interface has only one ipv4 adress
      console.log(ifname, iface.address);
    }
    ++alias;
  });
});

const hostname = app;
const port = 8080;

const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\n i am '+ app +'\n' + 'este es dato de la db ' + datodb);
});

server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});


