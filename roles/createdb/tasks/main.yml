- name: Ensure bash, OpenSSl, and libssl are the latest versions
  yum: name={{ item }} update_cache=true state=latest
  with_items:
    - bash
    - openssl
    - openssl-devel
  tags: packages

- name: Install PostgreSQL
  yum: name={{ item }} update_cache=true state=installed
  with_items:
    - postgresql-server
    - postgresql-contrib
    - postgresql-devel
    - python-psycopg2
  tags: packages
  #notify:
   #  command: sudo postgresql-setup initdb

#- name: create cluster postgresql
#  shell: postgresql-setup initdb
  
- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes

- name: instalando mongodb
  yum:
    name: mongodb-org

- name: config mongo
  copy:
    src: /home/distribuidosjsgd/Documentos/parcial1sd/playbooks/files/mongod.conf.j2
    dest: /etc/mongod.conf
    remote_src: false

- name: iniciando mongo
  service:
    name: mongod
    state: started
    enabled: yes

- name: creando db mongo
  command: mongo --eval="db.getSiblingDB('bibliotecadb').createCollection('libros')"
     
- name: Ensure database is created
  become: true
  become_user: postgres
  postgresql_db: 
    name: libros
    encoding: UTF-8
    lc_collate: es_CO.UTF-8
    lc_ctype: es_CO.UTF-8
    template: template0
    state: present

- name: Ensure user has access to the database
  become: true
  become_user: postgres
  postgresql_user: db='libros'
               name={{ db_user }}
               password={{ db_password }}
               priv=ALL
               state=present

- name: Ensure user does not have unnecessary privileges
  become: true
  become_user: postgres
  postgresql_user: name={{ db_user }}
               role_attr_flags=NOSUPERUSER,NOCREATEDB
               state=present
